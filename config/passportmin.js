var db=require("./dbmin.js"),userDetails=require("./userDetails.js");db.connectMongo();var easyMongo=db.easyMongo,LocalStrategy=require("passport-local").Strategy;module.exports=function(a){function b(a,b,c,d){process.nextTick(function(){easyMongo(db.findDoc,"users",{email:b}).then(function(e){return null!=e&&e.email==b?d(null,!1,a.flash("message","This email is already taken.")):(console.log("No Email found in db,registering new email"),userDetails.local.password=c,userDetails.local.id=userDetails.generateHash(b),userDetails.local.email=b,easyMongo(db.insertDoc,"users",{id:userDetails.local.id,email:userDetails.local.email,password:userDetails.local.password}).then(function(a){return console.log("Inserted in database"),d(null,{id:userDetails.local.id,email:userDetails.local.email,password:userDetails.local.password})}),void 0)})})}function c(a,b,c,d){process.nextTick(function(){easyMongo(db.findDoc,"users",{email:b}).then(function(e){return null!==e&&e.email==b&&e.password==c?(userDetails.local.password=e.password,userDetails.local.id=e.id,userDetails.local.email=e.email,d(null,{id:userDetails.local.id,email:userDetails.local.email,password:userDetails.local.password})):d(null,!1,a.flash("message","Not a valid password or email."))})})}a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){b(null,a)}),a.use("local-signup",new LocalStrategy({usernameField:"email",passwordField:"password",passReqToCallback:!0},b)),a.use("local-login",new LocalStrategy({usernameField:"email",passwordField:"password",passReqToCallback:!0},c))};